// =================== DO NOT EDIT THIS FILE ====================
// Generated by Modello 1.8.1,
// any modifications will be overwritten.
// ==============================================================

package org.apache.maven.model.immutable;

import java.util.List;
import java.util.Map;
import java.util.Properties;


public class Contributor
{
    public final String name;
    public final String email;
    public final String url;
    public final String organization;
    public final String organizationUrl;
    private final List<String> roles;
    public final String timezone;
    public final Properties properties;
    private final Map<Object, InputLocation> locations;

    Contributor( String name, String email, String url, String organization, String organizationUrl, List<String> roles,
                 String timezone, Properties properties, Map<Object, InputLocation> locations )
    {
        this.name = name;
        this.email = email;
        this.url = url;
        this.organization = organization;
        this.organizationUrl = organizationUrl;
        this.roles = roles;
        this.timezone = timezone;
        this.properties = properties;
        this.locations = locations;
    }

    public static Contributor createContributor( String name, String email, String url, String organization,
                                                 String organizationUrl, List<String> roles, String timezone,
                                                 Properties properties, Map<Object, InputLocation> locations )
    {
        return new Contributor( name, email, url, organization, organizationUrl, roles, timezone, properties,
                                locations );
    }

    /**
     * Method getProperties.
     *
     * @return Properties
     */
    public Properties getProperties()
    {
        return properties;
    }
    public List<String> getRoles()
    {
        return roles;
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o )
        {
            return true;
        }
        if ( o == null || getClass() != o.getClass() )
        {
            return false;
        }

        Contributor that = (Contributor) o;

        if ( email != null ? !email.equals( that.email ) : that.email != null )
        {
            return false;
        }
        if ( name != null ? !name.equals( that.name ) : that.name != null )
        {
            return false;
        }
        if ( organization != null ? !organization.equals( that.organization ) : that.organization != null )
        {
            return false;
        }
        if ( organizationUrl != null ? !organizationUrl.equals( that.organizationUrl ) : that.organizationUrl != null )
        {
            return false;
        }
        if ( properties != null ? !properties.equals( that.properties ) : that.properties != null )
        {
            return false;
        }
        if ( roles != null ? !roles.equals( that.roles ) : that.roles != null )
        {
            return false;
        }
        if ( timezone != null ? !timezone.equals( that.timezone ) : that.timezone != null )
        {
            return false;
        }
        if ( url != null ? !url.equals( that.url ) : that.url != null )
        {
            return false;
        }

        return true;
    }

    @Override
    public int hashCode()
    {
        int result = name != null ? name.hashCode() : 0;
        result = 31 * result + ( email != null ? email.hashCode() : 0 );
        result = 31 * result + ( url != null ? url.hashCode() : 0 );
        result = 31 * result + ( organization != null ? organization.hashCode() : 0 );
        result = 31 * result + ( organizationUrl != null ? organizationUrl.hashCode() : 0 );
        result = 31 * result + ( roles != null ? roles.hashCode() : 0 );
        result = 31 * result + ( timezone != null ? timezone.hashCode() : 0 );
        result = 31 * result + ( properties != null ? properties.hashCode() : 0 );
        return result;
    }
}
