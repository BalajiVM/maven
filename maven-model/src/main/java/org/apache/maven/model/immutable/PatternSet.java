// =================== DO NOT EDIT THIS FILE ====================
// Generated by Modello 1.8.1,
// any modifications will be overwritten.
// ==============================================================

package org.apache.maven.model.immutable;

import java.util.List;
import java.util.Map;

/**
 * Definition of include or exclude patterns.
 * 
 * @version $Revision$ $Date$
 */
@SuppressWarnings( "all" )
public class PatternSet
{
    private java.util.List<String> includes;
    private java.util.List<String> excludes;
    private java.util.Map<Object, InputLocation> locations;

    public PatternSet( List<String> includes, List<String> excludes, Map<Object, InputLocation> locations )
    {
        this.includes = includes;
        this.excludes = excludes;
        this.locations = locations;
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o )
        {
            return true;
        }
        if ( o == null || getClass() != o.getClass() )
        {
            return false;
        }

        PatternSet that = (PatternSet) o;

        if ( excludes != null ? !excludes.equals( that.excludes ) : that.excludes != null )
        {
            return false;
        }
        if ( includes != null ? !includes.equals( that.includes ) : that.includes != null )
        {
            return false;
        }

        return true;
    }

    @Override
    public int hashCode()
    {
        int result = includes != null ? includes.hashCode() : 0;
        result = 31 * result + ( excludes != null ? excludes.hashCode() : 0 );
        return result;
    }
}
